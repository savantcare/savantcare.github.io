(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{278:function(e,t,a){"use strict";a.r(t);var r=a(6),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"designing-system-versioned-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#designing-system-versioned-table"}},[e._v("#")]),e._v(" Designing system versioned table")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#what"}},[e._v("What")]),a("ul",[a("li",[a("a",{attrs:{href:"#q-what-is-the-common-principle-to-apply"}},[e._v("Q) What is the common principle to apply?")])])])]),a("li",[a("a",{attrs:{href:"#why"}},[e._v("Why")]),a("ul",[a("li",[a("a",{attrs:{href:"#q-a-user-adds-a-new-weight-should-existing-row-be-edited-or-a-new-row-be-inserted"}},[e._v("Q) A user adds a new weight should existing row be edited or a new row be inserted?")])])])])])]),a("p"),e._v(" "),a("h2",{attrs:{id:"what"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[e._v("#")]),e._v(" What")]),e._v(" "),a("h3",{attrs:{id:"q-what-is-the-common-principle-to-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-what-is-the-common-principle-to-apply"}},[e._v("#")]),e._v(" Q) What is the common principle to apply?")]),e._v(" "),a("p",[e._v("At T # of rows = # of occurence possible.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th"),e._v(" "),a("th",[e._v("# possible at time T")]),e._v(" "),a("th",[e._v("# of rows in table")]),e._v(" "),a("th",[e._v("Options in UI")]),e._v(" "),a("th",[e._v("DB Ops")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Recommendation")]),e._v(" "),a("td",[e._v("Many")]),e._v(" "),a("td",[e._v("1 for each rec of patient")]),e._v(" "),a("td",[e._v("Add in card header "),a("br"),e._v("Change in data row")]),e._v(" "),a("td",[e._v("insert"),a("br"),e._v("update")])]),e._v(" "),a("tr",[a("td",[e._v("Reminder")]),e._v(" "),a("td",[e._v("Many")]),e._v(" "),a("td",[e._v("1 for each rem of patient")]),e._v(" "),a("td",[e._v("Add in card header"),a("br"),e._v("Change in data row")]),e._v(" "),a("td",[e._v("insert"),a("br"),e._v("update")])]),e._v(" "),a("tr",[a("td",[e._v("Weight")]),e._v(" "),a("td",[e._v("One")]),e._v(" "),a("td",[e._v("1 for the patient")]),e._v(" "),a("td",[e._v("Change in data row")]),e._v(" "),a("td",[e._v("update")])]),e._v(" "),a("tr",[a("td",[e._v("Dx")]),e._v(" "),a("td",[e._v("Many")]),e._v(" "),a("td",[e._v("1 for each dx of patient")]),e._v(" "),a("td",[e._v("Add in card header"),a("br"),e._v("Since there are children change in data row not allowed"),a("br"),e._v("Discontinue in data row")]),e._v(" "),a("td",[e._v("insert"),a("br"),a("br"),e._v("delete")])]),e._v(" "),a("tr",[a("td",[e._v("Assessment")]),e._v(" "),a("td",[e._v("Below a DX only 1 asssemment is possible")]),e._v(" "),a("td",[e._v("1 for each dx of patient")]),e._v(" "),a("td",[e._v("Change in data row")]),e._v(" "),a("td",[e._v("update")])]),e._v(" "),a("tr",[a("td",[e._v("Appearence below MSE")]),e._v(" "),a("td",[e._v("One")]),e._v(" "),a("td",[e._v("1 for the patient.")]),e._v(" "),a("td",[e._v("Change in data row")]),e._v(" "),a("td",[e._v("update")])]),e._v(" "),a("tr",[a("td",[e._v("Email address")]),e._v(" "),a("td",[e._v("Many")]),e._v(" "),a("td",[e._v("1 for each email address of patient")]),e._v(" "),a("td",[e._v("Add in card header"),a("br"),e._v("Change in data row"),a("br"),e._v("Discontinue in data row")]),e._v(" "),a("td",[e._v("insert"),a("br"),e._v("update"),a("br"),e._v("delete")])])])]),e._v(" "),a("h2",{attrs:{id:"why"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[e._v("#")]),e._v(" Why")]),e._v(" "),a("h3",{attrs:{id:"q-a-user-adds-a-new-weight-should-existing-row-be-edited-or-a-new-row-be-inserted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a-user-adds-a-new-weight-should-existing-row-be-edited-or-a-new-row-be-inserted"}},[e._v("#")]),e._v(" Q) A user adds a new weight should existing row be edited or a new row be inserted?")]),e._v(" "),a("p",[e._v("(In both cases system verisoning table is used)")]),e._v(" "),a("p",[e._v('Data row options -> A (Add), D (Discontinue)\nD is used when a wrong data has been entered.\nIf user chooses D then run the "delete query". When delete query is run the temporal DB of mariadb does not delete the data. MariaDB only enters the current timestamp in ROW_END')]),e._v(" "),a("h4",{attrs:{id:"option-1-edit-of-same-row"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option-1-edit-of-same-row"}},[e._v("#")]),e._v(" Option 1: Edit of same row")]),e._v(" "),a("p",[e._v('Positives:\n"as of" query is easier. So -> select weight from weight where paitentUUID=\'asdasd\' as of 1st Jan 2020\n"as of" is a new sql term introduced with temporal DB https://mariadb.com/kb/en/temporal-data-tables/#querying-historical-data\nNegatives:\nMake a time series graph.\nSome data needs to be ignored. Doctor entered it by mistake.\nThis cannot be done.')]),e._v(" "),a("h4",{attrs:{id:"option-2-each-weight-is-a-new-row"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option-2-each-weight-is-a-new-row"}},[e._v("#")]),e._v(" Option 2: Each weight is a new row")]),e._v(" "),a("p",[e._v('Negatives:\nTo get data "as of" a particular day the query is a bit complicated.\nSuppose I want to know the weight on 1st Jan 2020.\nSo the query has to be "select weight from weight where ROW_START < 1st Jan 2020 and ROW_START is max"')])])}),[],!1,null,null,null);t.default=s.exports}}]);